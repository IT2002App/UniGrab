CREATE TABLE IF NOT EXISTS users(
	user_id SERIAL PRIMARY KEY,
	user_name VARCHAR(32) NOT NULL UNIQUE,
	email VARCHAR(64) NOT NULL UNIQUE,
	phone_number INT NOT NULL UNIQUE,
	birthday DATE NOT NULL,
	address VARCHAR(128) NOT NULL,
	passwords VARCHAR (64) NOT NULL,
	CHECK(email like '%@%.%'),
	CHECK(10000000 < phone_number AND phone_number< 100000000));

CREATE TABLE IF NOT EXISTS orders(
        order_id SERIAL PRIMARY KEY,
        user_id INT REFERENCES users(user_id)
        ON UPDATE CASCADE ON DELETE CASCADE,
	phone_number INT REFERENCES users(phone_number)
        ON UPDATE CASCADE ON DELETE CASCADE,
        order_content VARCHAR(128) NOT NULL,
	shop_address VARCHAR(128) NOT NULL,
	user_address VARCHAR(128) Not NULL,
	fee FLOAT(16),
        status VARCHAR(16) NOT NULL default 'waiting',
	CHECK (fee > 0),
	CHECK (status IN ('waitng','claimed','completed')));

CREATE TABLE IF NOT EXISTS claim(
	claim_id SERIAL PRIMARY KEY,
        order_id INT REFERENCES orders(order_id) 
	ON UPDATE CASCADE ON DELETE CASCADE,
        user_id INT REFERENCES users(user_id)
	ON UPDATE CASCADE ON DELETE CASCADE,
	deliveryman_id INT REFERENCES users(user_id)
	ON UPDATE CASCADE ON DELETE CASCADE,
	CHECK (deliveryman_id <> user_id));
